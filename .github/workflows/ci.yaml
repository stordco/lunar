# This file is synced with stordco/common-config-elixir. Any changes will be overwritten.

name: CI

on:
  merge_group:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
      - code-freeze/**
  workflow_call:
    secrets:
      CI_SERVICE_KEY:
        required: true
      GH_PERSONAL_ACCESS_TOKEN:
        required: true
      HEX_API_KEY:
        required: true
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Credo:
    if: ${{ !startsWith(github.head_ref, 'release-please--branches') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}
          oban-fingerprint: ${{ secrets.OBAN_KEY_FINGERPRINT }}
          oban-token: ${{ secrets.OBAN_LICENSE_KEY }}

      - name: Credo
        run: mix credo --strict

  Dependencies:
    if: ${{ !startsWith(github.head_ref, 'release-please--branches') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}
          oban-fingerprint: ${{ secrets.OBAN_KEY_FINGERPRINT }}
          oban-token: ${{ secrets.OBAN_LICENSE_KEY }}

      - name: Unused
        run: mix deps.unlock --check-unused

  Dialyzer:
    if: ${{ !startsWith(github.head_ref, 'release-please--branches') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}
          oban-fingerprint: ${{ secrets.OBAN_KEY_FINGERPRINT }}
          oban-token: ${{ secrets.OBAN_LICENSE_KEY }}

      - name: Dialyzer
        run: mix dialyzer --format github

  Documentation:
    if: ${{ !startsWith(github.head_ref, 'release-please--branches') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}
          oban-fingerprint: ${{ secrets.OBAN_KEY_FINGERPRINT }}
          oban-token: ${{ secrets.OBAN_LICENSE_KEY }}

      - name: Docs
        run: mix docs

  Format:
    if: ${{ !startsWith(github.head_ref, 'release-please--branches') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}
          oban-fingerprint: ${{ secrets.OBAN_KEY_FINGERPRINT }}
          oban-token: ${{ secrets.OBAN_LICENSE_KEY }}

      - name: Format
        run: mix format --check-formatted

  Test:
    if: ${{ !startsWith(github.head_ref, 'release-please--branches') }}
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test


    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}
          oban-fingerprint: ${{ secrets.OBAN_KEY_FINGERPRINT }}
          oban-token: ${{ secrets.OBAN_LICENSE_KEY }}

      - name: Compile
        run: mix compile --warnings-as-errors

      - name: Test
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

